#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct stack
{
int size;
int top;
int *arr;
};
int isFULL(struct stack *ptr)
{if(ptr->top==-1)
{
return 1;
}
else
{
return 0;
}
};
int isempty(struct stack*ptr)
{
if(ptr->top==ptr->size-1)
{
return 1;
}
else
{
return 0;
}
};
void push(struct stack *ptr,int val)
{
if(isFULL(ptr))
{
printf("\t stack is overflow \n");
}
else
{
ptr->top++;
ptr->arr[ptr->top]=val;}
};
int pop(struct stack *ptr)
{
if(isempty(ptr))
{
printf("\t stack is underflow \n");
return-1;
}
else
{
int val=ptr->arr[ptr->top];
ptr->top--;
ptr->arr[ptr->top]=val;
return val;
}
};
void main()
{
struct stack *sp=(struct stack*)malloc(sizeof(struct stack));
sp->size=8;
sp->top=-1;
sp->arr=(int *)malloc(sp->size*sizeof(int));
clrscr();
/*if(isFULL(sp))
{
printf("\t stack is overflow \n");
}
else
{
sp->top++;
sp->arr[sp->top]=val;
}*/
push(sp,34);
push(sp,36);
push(sp,10);
push(sp,12);
push(sp,14);
push(sp,16);
push(sp,2);
push(sp,4);
printf("\t before stack %d \n",isFULL(sp));
printf("\t before satck %d \n",isempty(sp));
printf("\t pushed %d \n",pop(sp));
printf("\t poped %d \n",pop(sp));
getch();
}