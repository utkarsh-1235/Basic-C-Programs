#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct stack{
int size;
int *arr;
int top;
};
int isEmpty(struct stack*ptr)
{
if(ptr->top==-1)
{
return 1;
}
else
{
return 0;
}
};
int isFull(struct stack*ptr)
{
if(ptr->top==ptr->size-1)
{
return 1;
}
else
{
return 0;
}
};
void push(struct stack*ptr,int val)
{
if(isFull(ptr))
{
printf("\t stack is overflow \n");
}
else
{
ptr->top++;
ptr->arr[ptr->top]=val;
}
};
int pop(struct stack*ptr)
{
int val;
if(isEmpty(ptr))
{
printf("\t stack is underglow \n");
return -1;
}
else
{
val=ptr->arr[ptr->top];
ptr->top--;
return val;
}
};
void main()
{
struct stack*sp=(struct stack*)malloc(sizeof(struct stack));
clrscr();
sp->size=10;
sp->top=-1;
sp->arr=(int*)malloc(sp->size*sizeof(int));
printf("\t stack is created successfully \n");
printf("\t before pushing ,Full:%d \n",isFull(sp));
printf("\t before pushing ,empty:%d",isEmpty(sp));
push(sp,40);
push(sp,10);
push(sp,20);
push(sp,30);
push(sp,50);
push(sp,60);
push(sp,20);
push(sp,60);
push(sp,30);
push(sp,10);
printf("\t after pushing,full:%d \n",isFull(sp));
printf("\t after pushing ,empty:%d \n",isEmpty(sp));
printf("\t popped %d from the stack \n",pop(sp));
getch();
}